[build-system]
requires = [
    "meson>=0.64.0",
    "ninja",
    "meson-python>=0.13.0",
    "cython>=0.29.0"
]
build-backend = "mesonpy"

# cibuildwheel配置
[tool.cibuildwheel]
# 构建哪些版本
build = ["cp39-*"]
# 跳过哪些版本
skip = ["pp*", "*musllinux*"]

# 测试设置
test-command = [
    "python -c \"import irssg; print('Import successful')\"",
    "python -c \"import irssg; print('Version:', irssg.__version__)\"",
    "python -c \"print('=== Testing wheel import and basic functionality ==='); import irssg; print(f'Package location: {irssg.__file__}'); print(f'Available modules: {[attr for attr in dir(irssg) if not attr.startswith(\\\"_\\\")]}')\""
]
test-requires = ["pytest"]

# Linux特定配置
[tool.cibuildwheel.linux]
archs = ["x86_64"]
environment = { FFLAGS = "-fallow-invalid-boz -fbackslash -ffree-line-length-none -fallow-argument-mismatch" }
before-build = [
    "echo 'Building Linux wheels with manylinux'",
    "echo 'Available Python versions:'",
    "ls /opt/python/",
    "echo 'Parallel build configuration:'",
    "echo 'Available CPU cores:' $(nproc)",
    "echo 'MAKEFLAGS:' $MAKEFLAGS"
]

# macOS特定配置
[tool.cibuildwheel.macos]
archs = ["x86_64", "arm64"]
environment = { FFLAGS = "-fallow-invalid-boz -fbackslash -ffree-line-length-none -fallow-argument-mismatch", MACOSX_DEPLOYMENT_TARGET = "15.0" }
before-build = [
    "echo 'Building macOS wheels'",
    "brew update",
    "brew install gcc lapack",
    "echo 'Setting up gfortran...'",
    "echo 'FC=$(brew --prefix)/bin/gfortran' >> $GITHUB_ENV",
    "echo 'CC=clang' >> $GITHUB_ENV",
    "echo 'CXX=clang++' >> $GITHUB_ENV"
]

# Windows特定配置
[tool.cibuildwheel.windows]
archs = ["AMD64"]
environment = { FC = "C:\\\\msys64\\\\ucrt64\\\\bin\\\\gfortran.exe", CC = "C:\\\\msys64\\\\ucrt64\\\\bin\\\\gcc.exe", CXX = "C:\\\\msys64\\\\ucrt64\\\\bin\\\\g++.exe", FFLAGS = "-fallow-invalid-boz -fbackslash -ffree-line-length-none -fallow-argument-mismatch -O2", CFLAGS = "-O2", CXXFLAGS = "-O2", LDFLAGS = "-LC:\\\\msys64\\\\ucrt64\\\\lib -Wl,--allow-multiple-definition", OPENBLAS_NUM_THREADS = "1", OMP_NUM_THREADS = "1", MKL_NUM_THREADS = "1", BLAS = "None", LAPACK = "None", PATH = "C:\\\\msys64\\\\ucrt64\\\\bin;${PATH}", LIBRARY_PATH = "C:\\\\msys64\\\\ucrt64\\\\lib", CPATH = "C:\\\\msys64\\\\ucrt64\\\\include" }
before-build = [
    "echo 'Setting up Windows build environment...'",
    "windows_setup.bat",
    "echo 'Windows build environment setup complete'"
]

repair-wheel-command = [
    "echo 🧹 Repairing Windows wheel...",
    "echo 🔍 Checking wheel before repair...",
    "dir {wheel}",
    "echo 📦 Repairing with delvewheel...",
    "delvewheel repair --add-path C:\\\\msys64\\\\ucrt64\\\\bin -w {dest_dir} {wheel}",
    "echo 🔍 Checking repaired wheel...",
    "dir {dest_dir}",
    "echo ✅ Windows wheel repair completed"
]

[project]
name = "irssg"
version = "0.1.0"
description = "A Python wrapper for the IRSSG Fortran code"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.19.0",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Physics",
]

[project.scripts]
irssg = "irssg.cli:main"

[project.urls]
Homepage = "https://github.com/zhangyan31415/irssg_py"
"Bug Tracker" = "https://github.com/zhangyan31415/irssg_py/issues"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]

[tool.mesonpy]
build-dir = "build"
